{"ast":null,"code":"var _jsxFileName = \"/Users/johncho/Desktop/KiraTalent/frontend/src/containers/Library.jsx\";\nimport React, { Component } from 'react';\nimport Filter from '../components/Filter';\nimport BookList from '../components/BookList';\nimport Paginate from '../components/Paginate';\nimport Search from '../components/Search';\nimport './index.css';\n\nclass Library extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bookList: [],\n      // This is the master list of the library\n      newList: [],\n      // This is the list we will be updating to display to the users\n      pageNumber: 1,\n      // Current page number of the users\n      pageLimit: 0,\n      // Max page number to be displayed for the pagination\n      filter: 0,\n      // 0 = all books, 1 = reserved books\n      form: {\n        search: '' // what the user searches.\n\n      }\n    };\n    this.getBooks = this.getBooks.bind(this);\n  }\n\n  componentWillMount() {\n    this.getBooks();\n  }\n\n  getBooks() {\n    // API fetch to get the data from the database\n    fetch('http://127.0.0.1:8000/library/').then(response => response.json()).then(data => {\n      this.setState({\n        bookList: data,\n        newList: data,\n        pageLimit: Math.ceil(data.length / 3)\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  changePage(number, bookList) {\n    // Changing the current page number\n    this.setState({\n      pageNumber: number,\n      pageLimit: Math.ceil(bookList.length / 3)\n    });\n  }\n\n  getReservedBooks(number) {\n    // Choosing a list based on reservations or not\n    const filteredList = number ? this.state.bookList.filter(book => book.is_reserved) : this.state.bookList; // Updating the page number of the pagination based on filter choice above\n\n    const newPageNumber = this.state.pageNumber > Math.ceil(filteredList.length / 3) ? Math.ceil(filteredList.length / 3) : this.state.pageNumber;\n    this.setState({\n      filter: number,\n      newList: filteredList,\n      pageLimit: Math.ceil(filteredList.length / 3),\n      pageNumber: newPageNumber\n    });\n  }\n\n  handleSearch(e) {\n    const name = e.target.name;\n    const value = e.target.value; // Checking if the searched book exists\n\n    let searchedList = this.state.bookList.filter(book => book.title.toLowerCase().indexOf(value.toLowerCase()) !== -1); // Updating page number for pagination based on searched books\n\n    const newPageNumber = this.state.pageNumber > Math.ceil(searchedList.length / 3) ? Math.ceil(searchedList.length / 3) : this.state.pageNumber;\n    this.setState({\n      form: { ...this.state.form,\n        [name]: value\n      },\n      newList: searchedList,\n      pageLimit: Math.ceil(searchedList.length / 3),\n      pageNumber: newPageNumber\n    });\n  }\n\n  handleReservation(book) {\n    // API call to change it in the database\n    // Changing the reserved to unreserved, vice versa.\n    // Only possible to reserve when there are more than 0 copy left.\n    // Increase/decrease quantity number\n    if (!book.is_reserved && book.quantity > 0) {\n      book.is_reserved = !book.is_reserved;\n      book.quantity = book.quantity - 1;\n    } else if (book.is_reserved && book.quantity >= 0) {\n      book.is_reserved = !book.is_reserved;\n      book.quantity = book.quantity + 1;\n    } // Replacing with the updated status\n\n\n    this.state.bookList[book.id - 1] = book;\n    this.state.newList[book.id - 1] = book; // Updating the state\n\n    this.setState({\n      bookList: this.state.bookList,\n      newList: this.state.newList\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, \"Saasvile Public Library\"), /*#__PURE__*/React.createElement(Search, {\n      handleSearch: this.handleSearch.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Filter, {\n      filter: this.state.filter,\n      getFilter: this.getReservedBooks.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BookList, {\n      bookList: this.state.newList,\n      pageNumber: this.state.pageNumber,\n      filter: this.state.filter,\n      search: this.state.form,\n      handleReservation: this.handleReservation.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), this.state.bookList.length ? /*#__PURE__*/React.createElement(Paginate, {\n      bookList: this.state.newList,\n      pageNumber: this.state.pageNumber,\n      changePage: this.changePage.bind(this),\n      pageLimit: this.state.pageLimit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 23\n      }\n    }) : null);\n  }\n\n}\n\n;\nexport default Library;","map":{"version":3,"sources":["/Users/johncho/Desktop/KiraTalent/frontend/src/containers/Library.jsx"],"names":["React","Component","Filter","BookList","Paginate","Search","Library","constructor","props","state","bookList","newList","pageNumber","pageLimit","filter","form","search","getBooks","bind","componentWillMount","fetch","then","response","json","data","setState","Math","ceil","length","catch","err","console","log","changePage","number","getReservedBooks","filteredList","book","is_reserved","newPageNumber","handleSearch","e","name","target","value","searchedList","title","toLowerCase","indexOf","handleReservation","quantity","id","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Filter from '../components/Filter';\nimport BookList from '../components/BookList';\nimport Paginate from '../components/Paginate';\nimport Search from '../components/Search';\nimport './index.css';\n\nclass Library extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookList: [], // This is the master list of the library\n            newList: [], // This is the list we will be updating to display to the users\n            pageNumber: 1, // Current page number of the users\n            pageLimit: 0, // Max page number to be displayed for the pagination\n            filter: 0, // 0 = all books, 1 = reserved books\n            form: {\n                search: '' // what the user searches.\n            }\n        };\n        this.getBooks = this.getBooks.bind(this);\n    }\n\n    componentWillMount() {\n        this.getBooks();\n    }\n\n    getBooks() {\n        // API fetch to get the data from the database\n        fetch('http://127.0.0.1:8000/library/')\n        .then(response => response.json())\n        .then(data => {\n            this.setState({\n                bookList: data,\n                newList: data,\n                pageLimit: Math.ceil(data.length/3)\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    changePage(number, bookList) {\n        // Changing the current page number\n        this.setState({\n            pageNumber: number,\n            pageLimit: Math.ceil(bookList.length/3)\n        })\n    }\n\n    getReservedBooks(number) {\n        // Choosing a list based on reservations or not\n        const filteredList = number ? this.state.bookList.filter(book => book.is_reserved) : this.state.bookList ;\n        // Updating the page number of the pagination based on filter choice above\n        const newPageNumber = this.state.pageNumber > Math.ceil(filteredList.length/3) ? Math.ceil(filteredList.length/3) : this.state.pageNumber;\n\n        this.setState({\n            filter: number,\n            newList: filteredList,\n            pageLimit: Math.ceil(filteredList.length/3),\n            pageNumber: newPageNumber\n        })\n    }\n\n    handleSearch(e) {\n        const name = e.target.name;\n        const value = e.target.value;\n\n        // Checking if the searched book exists\n        let searchedList = this.state.bookList.filter(book => book.title.toLowerCase().indexOf(value.toLowerCase()) !== -1);\n        // Updating page number for pagination based on searched books\n        const newPageNumber = this.state.pageNumber > Math.ceil(searchedList.length/3) ? Math.ceil(searchedList.length/3) : this.state.pageNumber;\n\n        this.setState({\n            form: {\n                ...this.state.form,\n                [name]: value\n            },\n            newList: searchedList,\n            pageLimit: Math.ceil(searchedList.length/3),\n            pageNumber: newPageNumber\n        })\n    }\n\n    handleReservation(book) {\n        // API call to change it in the database\n\n        // Changing the reserved to unreserved, vice versa.\n        // Only possible to reserve when there are more than 0 copy left.\n        // Increase/decrease quantity number\n        if (!book.is_reserved && book.quantity > 0) {\n            book.is_reserved = !book.is_reserved\n            book.quantity = book.quantity - 1;\n        } else if (book.is_reserved && book.quantity >= 0) {\n            book.is_reserved = !book.is_reserved\n            book.quantity = book.quantity + 1;\n        }\n\n        // Replacing with the updated status\n        this.state.bookList[book.id - 1] = book;\n        this.state.newList[book.id - 1] = book;\n\n        // Updating the state\n        this.setState({\n            bookList: this.state.bookList,\n            newList: this.state.newList\n        })\n\n    }\n\n    render() {\n        return (\n            <div id=\"home\">\n                <h1>Saasvile Public Library</h1>\n                <Search handleSearch={this.handleSearch.bind(this)} />\n                <Filter filter={this.state.filter} getFilter={this.getReservedBooks.bind(this)} />\n                <BookList   bookList={this.state.newList} \n                            pageNumber={this.state.pageNumber}\n                            filter={this.state.filter}\n                            search={this.state.form}\n                            handleReservation={this.handleReservation.bind(this)} />\n                {\n                    this.state.bookList.length\n                    ? <Paginate bookList={this.state.newList} \n                                pageNumber={this.state.pageNumber} \n                                changePage={this.changePage.bind(this)}\n                                pageLimit={this.state.pageLimit} />\n                    : null\n                }\n            </div>\n        );\n    };\n};\n\nexport default Library;"]},"metadata":{},"sourceType":"module"}